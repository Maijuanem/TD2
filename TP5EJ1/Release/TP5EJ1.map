Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              ./Timer0.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strcmp.o)
                              ./main.o (strcmp)

Allocating common symbols
Common symbol       size              file

pass                0x5               ./main.o
tecla               0x1               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
LOAD ./Timer0.o
LOAD ./lcd_alfa.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x8a0
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x000000ca                __vector_22
                0x000000ca                __vector_28
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_27
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_21
                0x000000ca                __vector_29
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_18
                0x000000ca                __vector_20
 .text          0x000000ce        0x0 ./Timer0.o
 .text          0x000000ce        0x0 ./lcd_alfa.o
 .text          0x000000ce        0x0 ./main.o
 .text          0x000000ce        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x000000ce        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text          0x000000ce        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strcmp.o)
                0x000000ce                . = ALIGN (0x2)
 *(.text.*)
 .text.Timer0_init
                0x000000ce       0x7e ./Timer0.o
                0x000000ce                Timer0_init
 .text.__vector_16
                0x0000014c       0x14 ./Timer0.o
                0x0000014c                __vector_16
 .text.__vector_15
                0x00000160       0x14 ./Timer0.o
                0x00000160                __vector_15
 .text.lcd_write
                0x00000174       0x5a ./lcd_alfa.o
 .text.lcd_read
                0x000001ce       0x4a ./lcd_alfa.o
 .text.lcd_waitbusy
                0x00000218       0x1a ./lcd_alfa.o
 .text.lcd_command
                0x00000232       0x14 ./lcd_alfa.o
                0x00000232                lcd_command
 .text.lcd_data
                0x00000246       0x14 ./lcd_alfa.o
                0x00000246                lcd_data
 .text.lcd_gotoxy
                0x0000025a       0x10 ./lcd_alfa.o
                0x0000025a                lcd_gotoxy
 .text.lcd_getxy
                0x0000026a        0x8 ./lcd_alfa.o
                0x0000026a                lcd_getxy
 .text.lcd_clrscr
                0x00000272        0x8 ./lcd_alfa.o
                0x00000272                lcd_clrscr
 .text.lcd_home
                0x0000027a        0x8 ./lcd_alfa.o
                0x0000027a                lcd_home
 .text.lcd_putc
                0x00000282       0x2a ./lcd_alfa.o
                0x00000282                lcd_putc
 .text.lcd_puts
                0x000002ac       0x18 ./lcd_alfa.o
                0x000002ac                lcd_puts
 .text.lcd_puts_p
                0x000002c4       0x1c ./lcd_alfa.o
                0x000002c4                lcd_puts_p
 .text.lcd_init
                0x000002e0       0x74 ./lcd_alfa.o
                0x000002e0                lcd_init
 .text.Salida   0x00000354       0xd4 ./main.o
                0x00000354                Salida
 .text.main     0x00000428       0x6c ./main.o
                0x00000428                main
 .text.Validar  0x00000494       0x7a ./main.o
                0x00000494                Validar
 .text.__vector_5
                0x0000050e       0xe2 ./main.o
                0x0000050e                __vector_5
 .text.__vector_6
                0x000005f0       0xde ./main.o
                0x000005f0                __vector_6
 .text.__vector_7
                0x000006ce       0xde ./main.o
                0x000006ce                __vector_7
 .text.__vector_8
                0x000007ac       0xde ./main.o
                0x000007ac                __vector_8
 .text.libgcc   0x0000088a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x0000088a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000088a       0x12 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strcmp.o)
                0x0000088a                strcmp
                0x0000089c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000089c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x0000089c                exit
                0x0000089c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000089c        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x000008a0                _etext = .

.data           0x00800100       0x64 load address 0x000008a0
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0x0 ./Timer0.o
 .data          0x00800100        0x0 ./lcd_alfa.o
 .data          0x00800100       0x57 ./main.o
 .data          0x00800157        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800157        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .data          0x00800157        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strcmp.o)
 *(.data*)
 .data.valid    0x00800157        0x5 ./main.o
                0x00800157                valid
 .data.desplazador
                0x0080015c        0x1 ./main.o
                0x0080015c                desplazador
 .data.valor    0x0080015d        0x2 ./main.o
                0x0080015d                valor
 .data.cadena   0x0080015f        0x5 ./main.o
                0x0080015f                cadena
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800164                . = ALIGN (0x2)
                0x00800164                _edata = .
                0x00800164                PROVIDE (__data_end, .)

.bss            0x00800164        0xb
                0x00800164                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800164        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 .bss           0x00800164        0x0 ./Timer0.o
 .bss           0x00800164        0x0 ./lcd_alfa.o
 .bss           0x00800164        0x0 ./main.o
 .bss           0x00800164        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x00800164        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .bss           0x00800164        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strcmp.o)
 *(.bss*)
 .bss.modo_Timer0
                0x00800164        0x1 ./Timer0.o
                0x00800164                modo_Timer0
 .bss.estado    0x00800165        0x1 ./main.o
                0x00800165                estado
 .bss.n         0x00800166        0x1 ./main.o
                0x00800166                n
 .bss.num_error
                0x00800167        0x1 ./main.o
                0x00800167                num_error
 .bss.cursor    0x00800168        0x1 ./main.o
                0x00800168                cursor
 *(COMMON)
 COMMON         0x00800169        0x6 ./main.o
                0x00800169                pass
                0x0080016e                tecla
                0x0080016f                PROVIDE (__bss_end, .)
                0x000008a0                __data_load_start = LOADADDR (.data)
                0x00000904                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080016f        0x0
                0x0080016f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080016f                PROVIDE (__noinit_end, .)
                0x0080016f                _end = .
                0x0080016f                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(TP5EJ1.elf elf32-avr)
LOAD linker stubs
